/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.opensimulationplatform.proxyfmu.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-04-14")
public class ModelDescription implements org.apache.thrift.TBase<ModelDescription, ModelDescription._Fields>, java.io.Serializable, Cloneable, Comparable<ModelDescription> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ModelDescription");

  private static final org.apache.thrift.protocol.TField GUID_FIELD_DESC = new org.apache.thrift.protocol.TField("guid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField AUTHOR_FIELD_DESC = new org.apache.thrift.protocol.TField("author", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MODEL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("model_name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField FMI_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("fmi_version", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MODEL_IDENTIFIER_FIELD_DESC = new org.apache.thrift.protocol.TField("model_identifier", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField GENERATION_TOOL_FIELD_DESC = new org.apache.thrift.protocol.TField("generation_tool", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField GENERATION_DATE_AND_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("generation_date_and_time", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DEFAULT_EXPERIMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("default_experiment", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField MODEL_VARIABLES_FIELD_DESC = new org.apache.thrift.protocol.TField("model_variables", org.apache.thrift.protocol.TType.LIST, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ModelDescriptionStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ModelDescriptionTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable java.lang.String guid; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String author; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String model_name; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String fmi_version; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String description; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String model_identifier; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String generation_tool; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String generation_date_and_time; // required
  private @org.apache.thrift.annotation.Nullable DefaultExperiment default_experiment; // optional
  private @org.apache.thrift.annotation.Nullable java.util.List<ScalarVariable> model_variables; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GUID((short)1, "guid"),
    AUTHOR((short)2, "author"),
    MODEL_NAME((short)3, "model_name"),
    FMI_VERSION((short)4, "fmi_version"),
    DESCRIPTION((short)5, "description"),
    MODEL_IDENTIFIER((short)6, "model_identifier"),
    GENERATION_TOOL((short)7, "generation_tool"),
    GENERATION_DATE_AND_TIME((short)8, "generation_date_and_time"),
    DEFAULT_EXPERIMENT((short)9, "default_experiment"),
    MODEL_VARIABLES((short)10, "model_variables");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GUID
          return GUID;
        case 2: // AUTHOR
          return AUTHOR;
        case 3: // MODEL_NAME
          return MODEL_NAME;
        case 4: // FMI_VERSION
          return FMI_VERSION;
        case 5: // DESCRIPTION
          return DESCRIPTION;
        case 6: // MODEL_IDENTIFIER
          return MODEL_IDENTIFIER;
        case 7: // GENERATION_TOOL
          return GENERATION_TOOL;
        case 8: // GENERATION_DATE_AND_TIME
          return GENERATION_DATE_AND_TIME;
        case 9: // DEFAULT_EXPERIMENT
          return DEFAULT_EXPERIMENT;
        case 10: // MODEL_VARIABLES
          return MODEL_VARIABLES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.DEFAULT_EXPERIMENT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GUID, new org.apache.thrift.meta_data.FieldMetaData("guid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHOR, new org.apache.thrift.meta_data.FieldMetaData("author", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODEL_NAME, new org.apache.thrift.meta_data.FieldMetaData("model_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FMI_VERSION, new org.apache.thrift.meta_data.FieldMetaData("fmi_version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODEL_IDENTIFIER, new org.apache.thrift.meta_data.FieldMetaData("model_identifier", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GENERATION_TOOL, new org.apache.thrift.meta_data.FieldMetaData("generation_tool", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GENERATION_DATE_AND_TIME, new org.apache.thrift.meta_data.FieldMetaData("generation_date_and_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEFAULT_EXPERIMENT, new org.apache.thrift.meta_data.FieldMetaData("default_experiment", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DefaultExperiment.class)));
    tmpMap.put(_Fields.MODEL_VARIABLES, new org.apache.thrift.meta_data.FieldMetaData("model_variables", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.LIST        , "ModelVariables")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ModelDescription.class, metaDataMap);
  }

  public ModelDescription() {
  }

  public ModelDescription(
    java.lang.String guid,
    java.lang.String author,
    java.lang.String model_name,
    java.lang.String fmi_version,
    java.lang.String description,
    java.lang.String model_identifier,
    java.lang.String generation_tool,
    java.lang.String generation_date_and_time,
    java.util.List<ScalarVariable> model_variables)
  {
    this();
    this.guid = guid;
    this.author = author;
    this.model_name = model_name;
    this.fmi_version = fmi_version;
    this.description = description;
    this.model_identifier = model_identifier;
    this.generation_tool = generation_tool;
    this.generation_date_and_time = generation_date_and_time;
    this.model_variables = model_variables;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ModelDescription(ModelDescription other) {
    if (other.isSetGuid()) {
      this.guid = other.guid;
    }
    if (other.isSetAuthor()) {
      this.author = other.author;
    }
    if (other.isSetModelName()) {
      this.model_name = other.model_name;
    }
    if (other.isSetFmiVersion()) {
      this.fmi_version = other.fmi_version;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetModelIdentifier()) {
      this.model_identifier = other.model_identifier;
    }
    if (other.isSetGenerationTool()) {
      this.generation_tool = other.generation_tool;
    }
    if (other.isSetGenerationDateAndTime()) {
      this.generation_date_and_time = other.generation_date_and_time;
    }
    if (other.isSetDefaultExperiment()) {
      this.default_experiment = new DefaultExperiment(other.default_experiment);
    }
    if (other.isSetModelVariables()) {
      java.util.List<ScalarVariable> __this__model_variables = new java.util.ArrayList<ScalarVariable>(other.model_variables.size());
      for (ScalarVariable other_element : other.model_variables) {
        __this__model_variables.add(new ScalarVariable(other_element));
      }
      this.model_variables = __this__model_variables;
    }
  }

  public ModelDescription deepCopy() {
    return new ModelDescription(this);
  }

  @Override
  public void clear() {
    this.guid = null;
    this.author = null;
    this.model_name = null;
    this.fmi_version = null;
    this.description = null;
    this.model_identifier = null;
    this.generation_tool = null;
    this.generation_date_and_time = null;
    this.default_experiment = null;
    this.model_variables = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getGuid() {
    return this.guid;
  }

  public ModelDescription setGuid(@org.apache.thrift.annotation.Nullable java.lang.String guid) {
    this.guid = guid;
    return this;
  }

  public void unsetGuid() {
    this.guid = null;
  }

  /** Returns true if field guid is set (has been assigned a value) and false otherwise */
  public boolean isSetGuid() {
    return this.guid != null;
  }

  public void setGuidIsSet(boolean value) {
    if (!value) {
      this.guid = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAuthor() {
    return this.author;
  }

  public ModelDescription setAuthor(@org.apache.thrift.annotation.Nullable java.lang.String author) {
    this.author = author;
    return this;
  }

  public void unsetAuthor() {
    this.author = null;
  }

  /** Returns true if field author is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthor() {
    return this.author != null;
  }

  public void setAuthorIsSet(boolean value) {
    if (!value) {
      this.author = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getModelName() {
    return this.model_name;
  }

  public ModelDescription setModelName(@org.apache.thrift.annotation.Nullable java.lang.String model_name) {
    this.model_name = model_name;
    return this;
  }

  public void unsetModelName() {
    this.model_name = null;
  }

  /** Returns true if field model_name is set (has been assigned a value) and false otherwise */
  public boolean isSetModelName() {
    return this.model_name != null;
  }

  public void setModelNameIsSet(boolean value) {
    if (!value) {
      this.model_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFmiVersion() {
    return this.fmi_version;
  }

  public ModelDescription setFmiVersion(@org.apache.thrift.annotation.Nullable java.lang.String fmi_version) {
    this.fmi_version = fmi_version;
    return this;
  }

  public void unsetFmiVersion() {
    this.fmi_version = null;
  }

  /** Returns true if field fmi_version is set (has been assigned a value) and false otherwise */
  public boolean isSetFmiVersion() {
    return this.fmi_version != null;
  }

  public void setFmiVersionIsSet(boolean value) {
    if (!value) {
      this.fmi_version = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDescription() {
    return this.description;
  }

  public ModelDescription setDescription(@org.apache.thrift.annotation.Nullable java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getModelIdentifier() {
    return this.model_identifier;
  }

  public ModelDescription setModelIdentifier(@org.apache.thrift.annotation.Nullable java.lang.String model_identifier) {
    this.model_identifier = model_identifier;
    return this;
  }

  public void unsetModelIdentifier() {
    this.model_identifier = null;
  }

  /** Returns true if field model_identifier is set (has been assigned a value) and false otherwise */
  public boolean isSetModelIdentifier() {
    return this.model_identifier != null;
  }

  public void setModelIdentifierIsSet(boolean value) {
    if (!value) {
      this.model_identifier = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getGenerationTool() {
    return this.generation_tool;
  }

  public ModelDescription setGenerationTool(@org.apache.thrift.annotation.Nullable java.lang.String generation_tool) {
    this.generation_tool = generation_tool;
    return this;
  }

  public void unsetGenerationTool() {
    this.generation_tool = null;
  }

  /** Returns true if field generation_tool is set (has been assigned a value) and false otherwise */
  public boolean isSetGenerationTool() {
    return this.generation_tool != null;
  }

  public void setGenerationToolIsSet(boolean value) {
    if (!value) {
      this.generation_tool = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getGenerationDateAndTime() {
    return this.generation_date_and_time;
  }

  public ModelDescription setGenerationDateAndTime(@org.apache.thrift.annotation.Nullable java.lang.String generation_date_and_time) {
    this.generation_date_and_time = generation_date_and_time;
    return this;
  }

  public void unsetGenerationDateAndTime() {
    this.generation_date_and_time = null;
  }

  /** Returns true if field generation_date_and_time is set (has been assigned a value) and false otherwise */
  public boolean isSetGenerationDateAndTime() {
    return this.generation_date_and_time != null;
  }

  public void setGenerationDateAndTimeIsSet(boolean value) {
    if (!value) {
      this.generation_date_and_time = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DefaultExperiment getDefaultExperiment() {
    return this.default_experiment;
  }

  public ModelDescription setDefaultExperiment(@org.apache.thrift.annotation.Nullable DefaultExperiment default_experiment) {
    this.default_experiment = default_experiment;
    return this;
  }

  public void unsetDefaultExperiment() {
    this.default_experiment = null;
  }

  /** Returns true if field default_experiment is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultExperiment() {
    return this.default_experiment != null;
  }

  public void setDefaultExperimentIsSet(boolean value) {
    if (!value) {
      this.default_experiment = null;
    }
  }

  public int getModelVariablesSize() {
    return (this.model_variables == null) ? 0 : this.model_variables.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<ScalarVariable> getModelVariablesIterator() {
    return (this.model_variables == null) ? null : this.model_variables.iterator();
  }

  public void addToModelVariables(ScalarVariable elem) {
    if (this.model_variables == null) {
      this.model_variables = new java.util.ArrayList<ScalarVariable>();
    }
    this.model_variables.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<ScalarVariable> getModelVariables() {
    return this.model_variables;
  }

  public ModelDescription setModelVariables(@org.apache.thrift.annotation.Nullable java.util.List<ScalarVariable> model_variables) {
    this.model_variables = model_variables;
    return this;
  }

  public void unsetModelVariables() {
    this.model_variables = null;
  }

  /** Returns true if field model_variables is set (has been assigned a value) and false otherwise */
  public boolean isSetModelVariables() {
    return this.model_variables != null;
  }

  public void setModelVariablesIsSet(boolean value) {
    if (!value) {
      this.model_variables = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case GUID:
      if (value == null) {
        unsetGuid();
      } else {
        setGuid((java.lang.String)value);
      }
      break;

    case AUTHOR:
      if (value == null) {
        unsetAuthor();
      } else {
        setAuthor((java.lang.String)value);
      }
      break;

    case MODEL_NAME:
      if (value == null) {
        unsetModelName();
      } else {
        setModelName((java.lang.String)value);
      }
      break;

    case FMI_VERSION:
      if (value == null) {
        unsetFmiVersion();
      } else {
        setFmiVersion((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case MODEL_IDENTIFIER:
      if (value == null) {
        unsetModelIdentifier();
      } else {
        setModelIdentifier((java.lang.String)value);
      }
      break;

    case GENERATION_TOOL:
      if (value == null) {
        unsetGenerationTool();
      } else {
        setGenerationTool((java.lang.String)value);
      }
      break;

    case GENERATION_DATE_AND_TIME:
      if (value == null) {
        unsetGenerationDateAndTime();
      } else {
        setGenerationDateAndTime((java.lang.String)value);
      }
      break;

    case DEFAULT_EXPERIMENT:
      if (value == null) {
        unsetDefaultExperiment();
      } else {
        setDefaultExperiment((DefaultExperiment)value);
      }
      break;

    case MODEL_VARIABLES:
      if (value == null) {
        unsetModelVariables();
      } else {
        setModelVariables((java.util.List<ScalarVariable>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case GUID:
      return getGuid();

    case AUTHOR:
      return getAuthor();

    case MODEL_NAME:
      return getModelName();

    case FMI_VERSION:
      return getFmiVersion();

    case DESCRIPTION:
      return getDescription();

    case MODEL_IDENTIFIER:
      return getModelIdentifier();

    case GENERATION_TOOL:
      return getGenerationTool();

    case GENERATION_DATE_AND_TIME:
      return getGenerationDateAndTime();

    case DEFAULT_EXPERIMENT:
      return getDefaultExperiment();

    case MODEL_VARIABLES:
      return getModelVariables();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case GUID:
      return isSetGuid();
    case AUTHOR:
      return isSetAuthor();
    case MODEL_NAME:
      return isSetModelName();
    case FMI_VERSION:
      return isSetFmiVersion();
    case DESCRIPTION:
      return isSetDescription();
    case MODEL_IDENTIFIER:
      return isSetModelIdentifier();
    case GENERATION_TOOL:
      return isSetGenerationTool();
    case GENERATION_DATE_AND_TIME:
      return isSetGenerationDateAndTime();
    case DEFAULT_EXPERIMENT:
      return isSetDefaultExperiment();
    case MODEL_VARIABLES:
      return isSetModelVariables();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ModelDescription)
      return this.equals((ModelDescription)that);
    return false;
  }

  public boolean equals(ModelDescription that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_guid = true && this.isSetGuid();
    boolean that_present_guid = true && that.isSetGuid();
    if (this_present_guid || that_present_guid) {
      if (!(this_present_guid && that_present_guid))
        return false;
      if (!this.guid.equals(that.guid))
        return false;
    }

    boolean this_present_author = true && this.isSetAuthor();
    boolean that_present_author = true && that.isSetAuthor();
    if (this_present_author || that_present_author) {
      if (!(this_present_author && that_present_author))
        return false;
      if (!this.author.equals(that.author))
        return false;
    }

    boolean this_present_model_name = true && this.isSetModelName();
    boolean that_present_model_name = true && that.isSetModelName();
    if (this_present_model_name || that_present_model_name) {
      if (!(this_present_model_name && that_present_model_name))
        return false;
      if (!this.model_name.equals(that.model_name))
        return false;
    }

    boolean this_present_fmi_version = true && this.isSetFmiVersion();
    boolean that_present_fmi_version = true && that.isSetFmiVersion();
    if (this_present_fmi_version || that_present_fmi_version) {
      if (!(this_present_fmi_version && that_present_fmi_version))
        return false;
      if (!this.fmi_version.equals(that.fmi_version))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_model_identifier = true && this.isSetModelIdentifier();
    boolean that_present_model_identifier = true && that.isSetModelIdentifier();
    if (this_present_model_identifier || that_present_model_identifier) {
      if (!(this_present_model_identifier && that_present_model_identifier))
        return false;
      if (!this.model_identifier.equals(that.model_identifier))
        return false;
    }

    boolean this_present_generation_tool = true && this.isSetGenerationTool();
    boolean that_present_generation_tool = true && that.isSetGenerationTool();
    if (this_present_generation_tool || that_present_generation_tool) {
      if (!(this_present_generation_tool && that_present_generation_tool))
        return false;
      if (!this.generation_tool.equals(that.generation_tool))
        return false;
    }

    boolean this_present_generation_date_and_time = true && this.isSetGenerationDateAndTime();
    boolean that_present_generation_date_and_time = true && that.isSetGenerationDateAndTime();
    if (this_present_generation_date_and_time || that_present_generation_date_and_time) {
      if (!(this_present_generation_date_and_time && that_present_generation_date_and_time))
        return false;
      if (!this.generation_date_and_time.equals(that.generation_date_and_time))
        return false;
    }

    boolean this_present_default_experiment = true && this.isSetDefaultExperiment();
    boolean that_present_default_experiment = true && that.isSetDefaultExperiment();
    if (this_present_default_experiment || that_present_default_experiment) {
      if (!(this_present_default_experiment && that_present_default_experiment))
        return false;
      if (!this.default_experiment.equals(that.default_experiment))
        return false;
    }

    boolean this_present_model_variables = true && this.isSetModelVariables();
    boolean that_present_model_variables = true && that.isSetModelVariables();
    if (this_present_model_variables || that_present_model_variables) {
      if (!(this_present_model_variables && that_present_model_variables))
        return false;
      if (!this.model_variables.equals(that.model_variables))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetGuid()) ? 131071 : 524287);
    if (isSetGuid())
      hashCode = hashCode * 8191 + guid.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthor()) ? 131071 : 524287);
    if (isSetAuthor())
      hashCode = hashCode * 8191 + author.hashCode();

    hashCode = hashCode * 8191 + ((isSetModelName()) ? 131071 : 524287);
    if (isSetModelName())
      hashCode = hashCode * 8191 + model_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetFmiVersion()) ? 131071 : 524287);
    if (isSetFmiVersion())
      hashCode = hashCode * 8191 + fmi_version.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetModelIdentifier()) ? 131071 : 524287);
    if (isSetModelIdentifier())
      hashCode = hashCode * 8191 + model_identifier.hashCode();

    hashCode = hashCode * 8191 + ((isSetGenerationTool()) ? 131071 : 524287);
    if (isSetGenerationTool())
      hashCode = hashCode * 8191 + generation_tool.hashCode();

    hashCode = hashCode * 8191 + ((isSetGenerationDateAndTime()) ? 131071 : 524287);
    if (isSetGenerationDateAndTime())
      hashCode = hashCode * 8191 + generation_date_and_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetDefaultExperiment()) ? 131071 : 524287);
    if (isSetDefaultExperiment())
      hashCode = hashCode * 8191 + default_experiment.hashCode();

    hashCode = hashCode * 8191 + ((isSetModelVariables()) ? 131071 : 524287);
    if (isSetModelVariables())
      hashCode = hashCode * 8191 + model_variables.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ModelDescription other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetGuid()).compareTo(other.isSetGuid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGuid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.guid, other.guid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthor()).compareTo(other.isSetAuthor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.author, other.author);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModelName()).compareTo(other.isSetModelName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.model_name, other.model_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFmiVersion()).compareTo(other.isSetFmiVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFmiVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fmi_version, other.fmi_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModelIdentifier()).compareTo(other.isSetModelIdentifier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelIdentifier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.model_identifier, other.model_identifier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGenerationTool()).compareTo(other.isSetGenerationTool());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGenerationTool()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.generation_tool, other.generation_tool);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGenerationDateAndTime()).compareTo(other.isSetGenerationDateAndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGenerationDateAndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.generation_date_and_time, other.generation_date_and_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDefaultExperiment()).compareTo(other.isSetDefaultExperiment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultExperiment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.default_experiment, other.default_experiment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModelVariables()).compareTo(other.isSetModelVariables());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelVariables()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.model_variables, other.model_variables);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ModelDescription(");
    boolean first = true;

    sb.append("guid:");
    if (this.guid == null) {
      sb.append("null");
    } else {
      sb.append(this.guid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("author:");
    if (this.author == null) {
      sb.append("null");
    } else {
      sb.append(this.author);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("model_name:");
    if (this.model_name == null) {
      sb.append("null");
    } else {
      sb.append(this.model_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fmi_version:");
    if (this.fmi_version == null) {
      sb.append("null");
    } else {
      sb.append(this.fmi_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("model_identifier:");
    if (this.model_identifier == null) {
      sb.append("null");
    } else {
      sb.append(this.model_identifier);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("generation_tool:");
    if (this.generation_tool == null) {
      sb.append("null");
    } else {
      sb.append(this.generation_tool);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("generation_date_and_time:");
    if (this.generation_date_and_time == null) {
      sb.append("null");
    } else {
      sb.append(this.generation_date_and_time);
    }
    first = false;
    if (isSetDefaultExperiment()) {
      if (!first) sb.append(", ");
      sb.append("default_experiment:");
      if (this.default_experiment == null) {
        sb.append("null");
      } else {
        sb.append(this.default_experiment);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("model_variables:");
    if (this.model_variables == null) {
      sb.append("null");
    } else {
      sb.append(this.model_variables);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (default_experiment != null) {
      default_experiment.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ModelDescriptionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ModelDescriptionStandardScheme getScheme() {
      return new ModelDescriptionStandardScheme();
    }
  }

  private static class ModelDescriptionStandardScheme extends org.apache.thrift.scheme.StandardScheme<ModelDescription> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ModelDescription struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GUID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.guid = iprot.readString();
              struct.setGuidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AUTHOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.author = iprot.readString();
              struct.setAuthorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MODEL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.model_name = iprot.readString();
              struct.setModelNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FMI_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fmi_version = iprot.readString();
              struct.setFmiVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MODEL_IDENTIFIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.model_identifier = iprot.readString();
              struct.setModelIdentifierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // GENERATION_TOOL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.generation_tool = iprot.readString();
              struct.setGenerationToolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // GENERATION_DATE_AND_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.generation_date_and_time = iprot.readString();
              struct.setGenerationDateAndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DEFAULT_EXPERIMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.default_experiment = new DefaultExperiment();
              struct.default_experiment.read(iprot);
              struct.setDefaultExperimentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MODEL_VARIABLES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                struct.model_variables = new java.util.ArrayList<ScalarVariable>(_list32.size);
                @org.apache.thrift.annotation.Nullable ScalarVariable _elem33;
                for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                {
                  _elem33 = new ScalarVariable();
                  _elem33.read(iprot);
                  struct.model_variables.add(_elem33);
                }
                iprot.readListEnd();
              }
              struct.setModelVariablesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ModelDescription struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.guid != null) {
        oprot.writeFieldBegin(GUID_FIELD_DESC);
        oprot.writeString(struct.guid);
        oprot.writeFieldEnd();
      }
      if (struct.author != null) {
        oprot.writeFieldBegin(AUTHOR_FIELD_DESC);
        oprot.writeString(struct.author);
        oprot.writeFieldEnd();
      }
      if (struct.model_name != null) {
        oprot.writeFieldBegin(MODEL_NAME_FIELD_DESC);
        oprot.writeString(struct.model_name);
        oprot.writeFieldEnd();
      }
      if (struct.fmi_version != null) {
        oprot.writeFieldBegin(FMI_VERSION_FIELD_DESC);
        oprot.writeString(struct.fmi_version);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.model_identifier != null) {
        oprot.writeFieldBegin(MODEL_IDENTIFIER_FIELD_DESC);
        oprot.writeString(struct.model_identifier);
        oprot.writeFieldEnd();
      }
      if (struct.generation_tool != null) {
        oprot.writeFieldBegin(GENERATION_TOOL_FIELD_DESC);
        oprot.writeString(struct.generation_tool);
        oprot.writeFieldEnd();
      }
      if (struct.generation_date_and_time != null) {
        oprot.writeFieldBegin(GENERATION_DATE_AND_TIME_FIELD_DESC);
        oprot.writeString(struct.generation_date_and_time);
        oprot.writeFieldEnd();
      }
      if (struct.default_experiment != null) {
        if (struct.isSetDefaultExperiment()) {
          oprot.writeFieldBegin(DEFAULT_EXPERIMENT_FIELD_DESC);
          struct.default_experiment.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.model_variables != null) {
        oprot.writeFieldBegin(MODEL_VARIABLES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.model_variables.size()));
          for (ScalarVariable _iter35 : struct.model_variables)
          {
            _iter35.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ModelDescriptionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ModelDescriptionTupleScheme getScheme() {
      return new ModelDescriptionTupleScheme();
    }
  }

  private static class ModelDescriptionTupleScheme extends org.apache.thrift.scheme.TupleScheme<ModelDescription> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ModelDescription struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetGuid()) {
        optionals.set(0);
      }
      if (struct.isSetAuthor()) {
        optionals.set(1);
      }
      if (struct.isSetModelName()) {
        optionals.set(2);
      }
      if (struct.isSetFmiVersion()) {
        optionals.set(3);
      }
      if (struct.isSetDescription()) {
        optionals.set(4);
      }
      if (struct.isSetModelIdentifier()) {
        optionals.set(5);
      }
      if (struct.isSetGenerationTool()) {
        optionals.set(6);
      }
      if (struct.isSetGenerationDateAndTime()) {
        optionals.set(7);
      }
      if (struct.isSetDefaultExperiment()) {
        optionals.set(8);
      }
      if (struct.isSetModelVariables()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetGuid()) {
        oprot.writeString(struct.guid);
      }
      if (struct.isSetAuthor()) {
        oprot.writeString(struct.author);
      }
      if (struct.isSetModelName()) {
        oprot.writeString(struct.model_name);
      }
      if (struct.isSetFmiVersion()) {
        oprot.writeString(struct.fmi_version);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetModelIdentifier()) {
        oprot.writeString(struct.model_identifier);
      }
      if (struct.isSetGenerationTool()) {
        oprot.writeString(struct.generation_tool);
      }
      if (struct.isSetGenerationDateAndTime()) {
        oprot.writeString(struct.generation_date_and_time);
      }
      if (struct.isSetDefaultExperiment()) {
        struct.default_experiment.write(oprot);
      }
      if (struct.isSetModelVariables()) {
        {
          oprot.writeI32(struct.model_variables.size());
          for (ScalarVariable _iter36 : struct.model_variables)
          {
            _iter36.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ModelDescription struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.guid = iprot.readString();
        struct.setGuidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.author = iprot.readString();
        struct.setAuthorIsSet(true);
      }
      if (incoming.get(2)) {
        struct.model_name = iprot.readString();
        struct.setModelNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.fmi_version = iprot.readString();
        struct.setFmiVersionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.model_identifier = iprot.readString();
        struct.setModelIdentifierIsSet(true);
      }
      if (incoming.get(6)) {
        struct.generation_tool = iprot.readString();
        struct.setGenerationToolIsSet(true);
      }
      if (incoming.get(7)) {
        struct.generation_date_and_time = iprot.readString();
        struct.setGenerationDateAndTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.default_experiment = new DefaultExperiment();
        struct.default_experiment.read(iprot);
        struct.setDefaultExperimentIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.model_variables = new java.util.ArrayList<ScalarVariable>(_list37.size);
          @org.apache.thrift.annotation.Nullable ScalarVariable _elem38;
          for (int _i39 = 0; _i39 < _list37.size; ++_i39)
          {
            _elem38 = new ScalarVariable();
            _elem38.read(iprot);
            struct.model_variables.add(_elem38);
          }
        }
        struct.setModelVariablesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

